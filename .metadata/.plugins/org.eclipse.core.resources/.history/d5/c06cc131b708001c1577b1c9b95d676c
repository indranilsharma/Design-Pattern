package com.designPatern.SOLID_Princliple;

import java.io.IOException;

class Document {

}

interface Machine {
	void print(Document d) throws IOException;

	void scan(Document d) throws IOException;

	void fax(Document d) throws IOException;
}

interface Printer {
	void print(Document d) throws IOException;
}

interface IScanner {
	void scan(Document d) throws IOException;
}

interface MultiFunctionDevice extends Printer, IScanner {

}

class OldFashionedPrinter implements Machine {

	@Override
	public void print(Document d) throws IOException {
		System.out.println("OldFashionedPrinter working");
	}

	@Override
	public void scan(Document d) throws IOException {
		// will not work because functionality not present
	}

	@Override
	public void fax(Document d) throws IOException {
		// will not work because functionality not present
	}

}

class MultiFunctionPrinter implements Machine {

	@Override
	public void print(Document d) throws IOException {
	}

	@Override
	public void scan(Document d) throws IOException {
	}

	@Override
	public void fax(Document d) throws IOException {

	}

}

class OnlyPrint implements Printer {

	@Override
	public void print(Document d) throws IOException {
		System.out.println("OnlyPrint");
	}
}

class Photocopier implements Printer, IScanner {

	@Override
	public void scan(Document d) throws IOException {

	}

	@Override
	public void print(Document d) throws IOException {

	}

}

public class IterfaceSegrigationPrinciple {

	public static void main(String[] args) {

	}

}
